{"version":3,"sources":["js/tileJs.js","logo.svg","serviceWorker.js","Components/TileComponent.js","App.js","index.js"],"names":["Tile","element","tile","idleCss","pushTile","x","y","width","offsetWidth","height","offsetHeight","translateString","Math","min","style","webkitTransform","MozTransform","msTransform","oTransform","transform","document","addEventListener","MouseUp","MouseDown","event","offsetX","offsetY","tilePosition","elementPosition","pageX","pageY","removeEventListener","getNumericStyleProperty","prop","parseInt","getPropertyValue","e","inner","offsetLeft","offsetTop","getComputedStyle","offsetParent","webkitTransformOrigin","MozTransformOrigin","msTransformOrigin","oTransformOrigin","transformOrigin","parentElement","webkitTransformStyle","MozTransformStyle","msTransformStyle","oTransformStyle","transformStyle","webkitTransition","MozTransition","msTransition","oTransition","transition","outline","webkitFontSmoothing","window","onload","i","tileElements","getElementsByClassName","console","log","length","makeTiles","module","exports","Boolean","location","hostname","match","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","cursor","color","margin","textAlign","App","Grid","container","item","xs","backgroundColor","borderRight","float","fontSize","fontFamily","verticalAlign","className","marginRight","data-role","data-size","class","href","borderTop","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.568ac0a5.chunk.js","sourcesContent":["/*\n * Metro-tiles:  Css3 windows metro tiles\n * Author     :  Tim Holman\n * @Author    :  @twholman\n */\n\nfunction Tile( element ){\n\t\n\t// Tile element\t\n\tvar tile = element;\n\n\t// Global settings\n\n\t// Declare css for when the tile is in its idle state.\n    var idleCss = \"perspective( 800px ) rotateX( 0deg ) rotateY( 0deg ) translateZ( 0px )\";\n\n\n\tvar initialize = function() {\n\n\t\t// Set transform origin to the center of the element.\n\t\ttile.style.webkitTransformOrigin = \"50% 50%\";\n\t\ttile.style.MozTransformOrigin = \"50% 50%\";\n\t\ttile.style.msTransformOrigin = \"50% 50%\";\n\t\ttile.style.oTransformOrigin = \"50% 50%\";\n\t\ttile.style.transformOrigin = \"50% 50%\";\n\n\t\t// Make sure the parent preserves the 3d perspective\n\t\ttile.parentElement.style.webkitTransformStyle = \"preserve-3d\";\n\t\ttile.parentElement.style.MozTransformStyle = \"preserve-3d\";\n\t\ttile.parentElement.style.msTransformStyle = \"preserve-3d\";\n\t\ttile.parentElement.style.oTransformStyle = \"preserve-3d\";\n\t\ttile.parentElement.style.transformStyle = \"preserve-3d\";\n\n\t\t// Set element transform times\n\t\ttile.style.webkitTransition = \"-webkit-transform 0.08s\";\n\t\ttile.style.MozTransition = \"-moz-transform 0.08s\";\n\t\ttile.style.msTransition = \"-ms-transform 0.08s\";\n\t\ttile.style.oTransition = \"-o-transform 0.08s\";\n\t\ttile.style.transition = \"transform 0.08s\";\n\n\t\t// This gives an antialiased effect for transforms in firefox.\n\t\ttile.style.outline = \"1px solid transparent\";\n\n\t\t// Font smoothing for webkit.\n\t\ttile.style.webkitFontSmoothing = \"antialiased\";\n\n\t\t// Listen to mouse events for the tile.\n\t\ttile.addEventListener('mousedown', MouseDown, false);\n\t\t\n\t}\n\n\n\tvar pushTile = function( x, y ){\n\n\t\t// Get the elements width and height.\n\t\tvar width = tile.offsetWidth;\n\t\tvar height = tile.offsetHeight;\n\n\t\tvar translateString = \"perspective( 800px ) \";\n\t\t\n\n\t\t/*  Tilt based on position clicked\n\t\t *  \n\t\t *  Not quite sure how msft do this, but here's my logic:\n\t\t *\n\t\t   *  If the click is closer to the left, right, top or bottom:\n\t\t   *    Then tilt in that direction\n\t\t   *\n\t\t   *  Unless the click is in the middle quater of the tile:\n\t\t   *    In which case, push the tile down.\n\t\t   *\n\t\t */\n\n\t\t// If the click is in the center quater of the element, push down.\n\t\tif ( x > width/4 && x < (width/4 * 3) && y > height/4 && y < (height/4 * 3) ) {\n\n\t\t\ttranslateString += \"rotateX( 0deg ) rotateY( 0deg ) translateZ( -30px )\";\n\t\t}\n\t\t\n\t\t// is the user closer to the right/left hand side?\n\t\telse if ( Math.min( x, width - x) < Math.min( y, height - y) ) {\n\n\t\t\t// Tilt on the left side\n\t\t\tif ( x < width - x ) {\n\n\t\t\t\ttranslateString += \"rotateX( 0deg ) rotateY( -20deg ) translateZ( 0px )\";\n\n\t\t\t// Tilt on the right side\n\t\t\t} else {\n\n\t\t\t\ttranslateString += \"rotateX( 0deg ) rotateY( 20deg ) translateZ( 0px )\";\n\t\t\t}\n\n\t\t// the user is closer to the top/bottom side (also the default)\n\t\t} else {\n\n\t\t\t// Tilt on the top\n\t\t\tif ( y < height - y ) {\n\n\t\t\t\ttranslateString += \"rotateX( 20deg ) rotateY( 0deg ) translateZ( 0px )\";\n\n\t\t\t// Tilt on the bottom\n\t\t\t} else {\n\n\t\t\t\ttranslateString += \"rotateX( -20deg ) rotateY( 0deg ) translateZ( 0px )\";\n\t\t\t}\n\t\t}\n\n\t\t// Apply transformation to tile.\n\t\ttile.style.webkitTransform = translateString;\n\t\ttile.style.MozTransform = translateString;\n\t\ttile.style.msTransform = translateString;\n\t\ttile.style.oTransform = translateString;\n\t\ttile.style.transform = translateString;\n\n\t\tdocument.addEventListener('mouseup',   MouseUp,   false);    \n\n\t};\n\t\n\tvar MouseDown = function( event ){\n\n\t\t// Chrome\n\t\tif ( event.offsetX ) {\n\t\t\tpushTile( event.offsetX, event.offsetY );\n\t\t\treturn;\n\t\t}\n\n\t\t// Non offsetX browsers\n\t\tvar tilePosition = elementPosition( tile );\n\t\tvar x = event.pageX - tilePosition.x;\n\t\tvar y = event.pageY - tilePosition.y;\n\t\t\n\t\tpushTile( x, y );\n\t\t\n\t};\n\t\n\n\tvar MouseUp = function( event ){\n\n\t\t// Set the element to its idle state\n\t\ttile.style.webkitTransform = idleCss;\n\t\ttile.style.MozTransform = idleCss;\n\t\ttile.style.msTransform = idleCss;\n\t\ttile.style.oTransform = idleCss;\n\t\ttile.style.transform = idleCss;\n\n\t\tdocument.removeEventListener('mouseup',   MouseUp,   false);\n\t};\n\n\t// Element position finding for non webkit browsers.\n\t// How will this perform on mobile?\n\tvar getNumericStyleProperty = function(style, prop){\n    \treturn parseInt(style.getPropertyValue(prop),10) ;\n\t}\n\n\tvar elementPosition = function( e ){\n\t\tvar x = 0, y = 0;\n\t    var inner = true ;\n\t    do {\n\t        x += e.offsetLeft;\n\t        y += e.offsetTop;\n\t        var style = getComputedStyle(e,null) ;\n\t        var borderTop = getNumericStyleProperty(style,\"border-top-width\") ;\n\t        var borderLeft = getNumericStyleProperty(style,\"border-left-width\") ;\n\t        y += borderTop ;\n\t        x += borderLeft ;\n\t        if (inner){\n\t          var paddingTop = getNumericStyleProperty(style,\"padding-top\") ;\n\t          var paddingLeft = getNumericStyleProperty(style,\"padding-left\") ;\n\t          y += paddingTop ;\n\t          x += paddingLeft ;\n\t        }\n\t        inner = false ;\n\t    } while (e = e.offsetParent);\n\t    return { x: x, y: y };\n\t}\n\t\n\t// Initialize the tile.\n\tinitialize();\n}\n\nwindow.onload = () => { makeTiles() }\nfunction makeTiles(){\n\t// Find all tile elements\n\tvar tileElements = document.getElementsByClassName( 'metro-tile' );\n\tvar i;\n\tconsole.log('test')\n\t// Apply tile functions \n\tfor ( i = 0; i < tileElements.length; i++ ) {\n\n\t\tconsole.log('test')\n\t\tTile( tileElements[i] );\n\n\t}\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n// import Avatar from '@material-ui/core/Avatar';\r\n// import Button from '@material-ui/core/Button';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Container from '@material-ui/core/Container';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\n// import { properties } from '../Properties/Properties.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },  \r\n  tile: {\r\n    cursor : \"pointer\",\r\n    display: \"inline-flex\", \r\n    color: \"#fff\",\r\n    width: \"40px\",\r\n    height: \"40px\", \r\n    margin: \"1px\",\r\n    textAlign: \"center\"\r\n  },\r\n}));\r\n\r\nexport default function TileComponent(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n      content : props.content,\r\n      backgroundColor : {backgroundColor : props.color},\r\n      link: props.link\r\n  })\r\n\r\n  const handleOnChange = e => {\r\n    setState({...state, [e.target.name]: e.target.value})\r\n  }\r\n\r\n  return (\r\n    <>  \r\n        <a href = {state.link} className = {\"metro-tile \" + classes.tile} style = {state.backgroundColor}>\r\n            {state.content}\r\n        </a>\r\n    </>\r\n\r\n    // <Container component=\"main\" maxWidth=\"xs\">\r\n    //   <CssBaseline />\r\n    //   <div className={classes.paper}>\r\n    //     <Typography component=\"p\">\r\n    //       {state.jwt}\r\n    //     </Typography>\r\n    //     <Avatar className={classes.avatar}>\r\n    //       <LockOutlinedIcon />\r\n    //     </Avatar>\r\n    //     <Typography component=\"h1\" variant=\"h5\">\r\n    //       Sign in\r\n    //     </Typography>\r\n    //     <form className={classes.form} noValidate>\r\n    //       <FormHelperText error = {true}>\r\n    //         {state.error ? \"Неверное имя пользователя или пароль\" : \"\"}\r\n    //       </FormHelperText>\r\n    //       <TextField\r\n    //         variant=\"outlined\"\r\n    //         margin=\"normal\"\r\n    //         required\r\n    //         fullWidth\r\n    //         id=\"email\"\r\n    //         label=\"Email Address\"\r\n    //         name=\"username\"\r\n    //         autoComplete=\"email\"\r\n    //         autoFocus\r\n    //         value = {state.username}\r\n    //         onChange = {handleOnChange}\r\n    //       />\r\n    //       <TextField\r\n    //         variant=\"outlined\"\r\n    //         margin=\"normal\"\r\n    //         required\r\n    //         fullWidth\r\n    //         name=\"password\"\r\n    //         label=\"Password\"\r\n    //         type=\"password\"\r\n    //         id=\"password\"\r\n    //         autoComplete=\"current-password\"\r\n    //         value = {state.password}\r\n    //         onChange = {handleOnChange}\r\n    //       />\r\n    //       {/* <FormControlLabel\r\n    //         control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n    //         label=\"Remember me\"\r\n    //       /> */}\r\n    //         <Button\r\n    //           type=\"submit\"\r\n    //           fullWidth\r\n    //           variant=\"contained\"\r\n    //           color=\"primary\"\r\n    //           className={classes.submit}\r\n    //           onClick = {handleSubmit}\r\n    //         >\r\n    //           Sign In\r\n    //         </Button>\r\n    //       <Grid container>\r\n    //         {/* <Grid item xs>\r\n    //           <Link href=\"#\" variant=\"body2\">\r\n    //             Forgot password?\r\n    //           </Link>\r\n    //         </Grid> */}\r\n    //         <Grid item>\r\n    //           <Link to = \"/register\" variant=\"body2\">\r\n    //             Нет аккаунта? Зарегистрироваться\r\n    //           </Link>\r\n    //         </Grid>\r\n    //       </Grid>\r\n    //     </form>\r\n    //   </div>\r\n    //   {/* <Box mt={8}>\r\n    //     <Copyright />\r\n    //   </Box> */}\r\n    // </Container>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nimport './index.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactMarkdown from 'markdown-to-jsx'\nimport { Grid, Typography, Link } from '@material-ui/core'\nimport './js/tileJs'\nimport './css/style.css'\nimport TileComponent from './Components/TileComponent'\nimport './css/tiles.css'\nconst later = \"...\"\n\nexport default function App() {\n  // LoadJs();\n\n\n\n  return (\n    <>\n      <Grid container spacing={1} style={{ marginTop: \"30px\" }}>\n        <Grid item xs={4} style={{ backgroundColor: \"pink\" }} style={{ borderRight: \"1px dotted black\" }}>\n          <div style={{ float: \"right\", textAlign: \"right\" }}>\n            <span style={{ color: \"red\", fontSize: \"46px\", fontFamily: \"cursive\", verticalAlign: \"-10px\" }}>wild</span>\n            <br />\n            <span style={{ color: \"blue\", fontSize: \"25px\", fontFamily: \"cursive\" }}>running</span>\n            <br />\n            <br />\n            <span style={{ color: \"dimgray\", fontSize: \"25px\", fontFamily: \"cursive\" }}>ничего</span>\n            <br />\n            <span style={{ color: \"dimgray\", fontSize: \"25px\", fontFamily: \"cursive\" }}>всякое</span>\n            <br />\n            <span style={{ color: \"dimgray\", fontSize: \"25px\", fontFamily: \"cursive\" }}>что-то</span>\n            <br />\n\n            {/* <TileComponent content=\"Кое-что\" color=\"#5071ad\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <br />\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <br />\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content={later} color=\"#9ba6b9\"></TileComponent>\n            <TileComponent content=\"Что-то\" color=\"#5071ad\"></TileComponent>\n            <TileComponent content=\"YouTube\" color=\"#d02d2d\" link=\"https://www.youtube.com/channel/UCLwVj1QJA6jfyuAyRKT7kGA?view_as=subscriber\" />\n            <br /> */}\n\n            <div className=\"tiles-grid tiles-group\" style={{ marginRight: \"0px\" }}>\n              <div data-role=\"tile\" data-size=\"small\" class=\"bg-gray col-2 row-1\"></div>\n              <div data-role=\"tile\" data-size=\"small\" class=\" col-3 row-1\"></div>\n\n              <div data-role=\"tile\" data-size=\"small\" class=\"bg-gray col-2 row-2\"></div>\n              <div data-role=\"tile\" data-size=\"small\" class=\" col-3 row-2\"></div>\n              <div data-role=\"tile\" data-size=\"small\" class=\" col-4 row-2\"></div>\n\n              <div data-role=\"tile\" data-size=\"small\" class=\"bg-gray col-3 row-3\"></div>\n\n              <a href = \"https://www.youtube.com/channel/UCLwVj1QJA6jfyuAyRKT7kGA?view_as=subscriber\" data-role=\"tile\" data-size=\"small\" className=\"col-4 row-3 bg-red tile-small\">\n                <span class=\" mif-youtube-play icon\"></span>\n              </a>\n              {/* <div data-role=\"tile\" data-size=\"small\" class=\"col-1 row-2\"></div>\n              <div data-role=\"tile\" data-size=\"small\" class=\"col-2 row-2\"></div>\n              <div data-role=\"tile\" data-size=\"medium\"></div>\n              <div data-role=\"tile\" data-size=\"wide\"></div>\n              <div data-role=\"tile\" data-size=\"large\"></div>\n              <div data-role=\"tile\" data-size=\"medium\"></div>\n              <div data-role=\"tile\" data-size=\"medium\"></div>\n              <div data-role=\"tile\" data-size=\"wide\"></div> */}\n            </div>\n\n\n          </div>\n        </Grid>\n        <Grid item xs={5} style={{ backgroundColor: \"\" }}>\n          <ReactMarkdown>\n            {`\n###_Новость 1 - 7.10.2020_\nСоздал этот прекрасный сайт :)\n            `}\n          </ReactMarkdown>\n          <hr style={{ borderTop: \"1px dotted black\" }} />\n          <ReactMarkdown>\n            {`\n###_Новость 0 - 7.10.2020_\nЗапустил сайт на реакте + спринге - [https://ссылки.net/](https://surveyeveryone.ddns.net/)\n            `}\n          </ReactMarkdown>\n\n        </Grid>\n        <Grid item xs={3}></Grid>\n      </Grid>\n    </>\n  );\n}\n\n// export default App;\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactMarkdown from 'markdown-to-jsx'\nimport { Grid, Typography, Link } from '@material-ui/core'\nimport './js/tileJs'\nimport './css/style.css'\nimport TileComponent from './Components/TileComponent'\nconst later = \"...\" \n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}